// Copyright 2015 The gRPC Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.datasparsity.sparsityscoregenerator";
option java_outer_classname = "SparsityScoreGeneratorProto";
option objc_class_prefix = "SSG";

package sparsityscoregenerator;

service GetRequestParams {
  rpc TemporalRange (TRRequest) returns (TRReply) {}

  rpc AllMeasurementTypes (AMTRequest) returns (AMTReply) {}
}

service FindSparsityScores {

  rpc CheckServerConnection (ConnectionRequest) returns (ConnectionReply) {}

  rpc CheckDatabaseConnection (ConnectionRequest) returns (ConnectionReply) {}

  rpc CalculateSparsityScores (SSGRequest) returns (stream SSGReply) {}

}

enum ScopeType {
  SITE = 0;
  COUNTY = 1;
  STATE = 2;
  COUNTRY = 3;
}

message AMTRequest {
  string collectionName = 1;
  string filter = 2;
}

message AMTReply {
  repeated string measurementTypes = 1;
}

message TRRequest {
  string collectionName = 1;
  // ScopeType spatialScope = 2;
  // string spatialIdentifier = 3;
}

message TRReply {
  int64 firstTime = 1;
  int64 lastTime = 2;
}

message ConnectionRequest {}

message ConnectionReply {
  bool status = 1;
}

message SSGRequest {

  string collectionName = 1;
  ScopeType spatialScope = 2;
  string spatialIdentifier = 3;
  int64 startTime = 4;
  int64 endTime = 5;
  repeated string measurementTypes = 6;

}

message SSGReply {

  message Coordinates {
      double longitude = 1;
      double latitude = 2;
  }

  string monitorId = 1;
  double sparsityScore = 2;
  Coordinates coordinates = 3;
  int32 numberOfMeasurements = 4;
  repeated int64 epochTimes = 5;
  string organizationFormalName = 6;
  string monitoringLocationTypeName = 7;

}
